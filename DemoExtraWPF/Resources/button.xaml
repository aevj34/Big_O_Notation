<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- Focus Visual -->

  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle 
              Margin="2"
              StrokeThickness="1"
              Stroke="#60000000"
              StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: Button -->

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0.7" CornerRadius="5" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightForegroundBrush}"/>
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WhiteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0.7" CornerRadius="5" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SolidBorderBrush}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="border" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SolidBorderBrush}"/>
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DarkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource PressedBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0.7" CornerRadius="4" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect Color="Gray" BlurRadius="5" ShadowDepth="0" />
                        </Border.Effect>
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <!-- Rect Arriba-->
                            <Rectangle Opacity="0.85"  RadiusX="5.125" RadiusY="5.125" StrokeThickness="1" StrokeMiterLimit="2" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeLineJoin="Miter"    Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0"  Margin="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" Height="3">
                                <Shape.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="sc#1.000000, 0.914143, 0.914143, 0.914110" Offset="0.54308288610613942" />
                                                <GradientStop Color="sc#0.000000, 1.000000, 1.000000, 0.999880" Offset="0.6890280262373264" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                        <Brush.RelativeTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <TranslateTransform X="-0.5" Y="-0.5" />
                                                        <ScaleTransform ScaleX="0.71875000198589822" ScaleY="0.71875000198589822" />
                                                        <SkewTransform AngleX="0" AngleY="0" />
                                                        <RotateTransform Angle="90.004066810596811" />
                                                        <TranslateTransform X="0.5" Y="0.5" />
                                                        <TranslateTransform X="-0.13101142365557361" Y="-0.23437499997456734" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Brush.RelativeTransform>
                                    </LinearGradientBrush>
                                </Shape.Fill>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightForegroundBrush}"/>
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DatagridButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SolidBorderBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="0.7" CornerRadius="4" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                   
                        <Grid>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <!-- Rect Arriba-->
                            <Rectangle Opacity="0.85"  RadiusX="5.125" RadiusY="5.125" StrokeThickness="1" StrokeMiterLimit="2" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeLineJoin="Miter"    Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0"  Margin="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" Height="3">
                                <Shape.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="sc#1.000000, 0.914143, 0.914143, 0.914110" Offset="0.54308288610613942" />
                                                <GradientStop Color="sc#0.000000, 1.000000, 1.000000, 0.999880" Offset="0.6890280262373264" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                        <Brush.RelativeTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <TranslateTransform X="-0.5" Y="-0.5" />
                                                        <ScaleTransform ScaleX="0.71875000198589822" ScaleY="0.71875000198589822" />
                                                        <SkewTransform AngleX="0" AngleY="0" />
                                                        <RotateTransform Angle="90.004066810596811" />
                                                        <TranslateTransform X="0.5" Y="0.5" />
                                                        <TranslateTransform X="-0.13101142365557361" Y="-0.23437499997456734" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Brush.RelativeTransform>
                                    </LinearGradientBrush>
                                </Shape.Fill>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LightBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PressedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LightForegroundBrush}"/>
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RadRadioButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuinticEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_over" />-->
                                        <!--<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse" />-->
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_over" />-->
                                        <!--<DoubleAnimation Duration="0" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock_over" />-->
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock_over" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse_over" />
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock_over" />
                                        <DoubleAnimation Duration="0" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlock_over" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="textBlock_over" Foreground="{TemplateBinding Foreground}" Margin="-15,0"
                                   FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center"
                                   Text="{TemplateBinding Tag}" Opacity="0" IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom">
                        	<TextBlock.RenderTransform>
                                <TransformGroup>
                                  <ScaleTransform/>
                                  <SkewTransform/>
                                  <RotateTransform/>
                                  <TranslateTransform Y="8"/>
                                </TransformGroup>
                        	</TextBlock.RenderTransform>
                        </TextBlock>
                        
                        <Ellipse x:Name="ellipse_over" Stroke="{StaticResource LightBorderBrush}" Fill="{StaticResource RadialNormalBrush}" StrokeThickness="2" Opacity="1.0">
                            <Ellipse.Effect>
                                <DropShadowEffect Color="Gray" BlurRadius="5" ShadowDepth="0" />
                            </Ellipse.Effect>
                        </Ellipse>

                      
                        
                        <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                          Opacity="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AcceptStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PressedBrush}"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Border Name="MyBorder" CornerRadius="5,1,1,5" Background="{TemplateBinding Background}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="0.7">

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"></ColumnDefinition>
                                    <ColumnDefinition Width="5"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <Image  Height="16" Width="16"  Source="/NetSolutions.Aspen.WPF;component/Images/ic_action_accept.png">
                                </Image>

                                <Line  HorizontalAlignment="Left" Margin="0,0,0,0" Name="line4" Stroke="{StaticResource LightBorderBrush}" VerticalAlignment="Top" Width="2" Y1="0" Y2="640" Opacity="0.9" Grid.Column="1" />
                                <ContentPresenter x:Name="MyContentPresenter" TextBlock.FontWeight="Normal" TextBlock.FontFamily="trebuchet ms" TextBlock.Foreground="{StaticResource LightForegroundBrush}" Grid.Column="2" Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"  />

                            </Grid>
                        </Border>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background"  Value="{StaticResource LightBrush}" />-->
                            <Setter Property="BorderBrush" TargetName="MyBorder" Value="{StaticResource LightBorderBrush}" />
                            <!--<Setter TargetName="PathIcon" Property="Fill" Value="Black" />-->
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style x:Key="CancelStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PressedBrush}"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Border Name="MyBorder" CornerRadius="1,5,5,1" Background="{TemplateBinding Background}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="0.7">

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25"></ColumnDefinition>
                                    <ColumnDefinition Width="5"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <Image  Height="16" Width="16"  Source="/NetSolutions.Aspen.WPF;component/Images/ic_action_remove.png">
                                </Image>

                                <Line  HorizontalAlignment="Left" Margin="0,0,0,0" Name="line4" Stroke="{StaticResource LightBorderBrush}" VerticalAlignment="Top" Width="2" Y1="0" Y2="640" Opacity="0.9" Grid.Column="1" />
                                <ContentPresenter x:Name="MyContentPresenter" TextBlock.FontWeight="Normal" TextBlock.FontFamily="trebuchet ms" TextBlock.Foreground="{StaticResource LightForegroundBrush}" Grid.Column="2" Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"  />

                            </Grid>
                        </Border>

                        <!-- Rect Arriba-->
                        <!--<Rectangle Opacity="0.85"  RadiusX="5.125" RadiusY="5.125" StrokeThickness="1" StrokeMiterLimit="2" StrokeEndLineCap="Flat" StrokeStartLineCap="Flat" StrokeLineJoin="Miter"    Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0"  Margin="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" Height="3">
                            <Shape.Fill>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="sc#1.000000, 0.914143, 0.914143, 0.914110" Offset="0.54308288610613942" />
                                            <GradientStop Color="sc#0.000000, 1.000000, 1.000000, 0.999880" Offset="0.6890280262373264" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                    <Brush.RelativeTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <TranslateTransform X="-0.5" Y="-0.5" />
                                                    <ScaleTransform ScaleX="0.71875000198589822" ScaleY="0.71875000198589822" />
                                                    <SkewTransform AngleX="0" AngleY="0" />
                                                    <RotateTransform Angle="90.004066810596811" />
                                                    <TranslateTransform X="0.5" Y="0.5" />
                                                    <TranslateTransform X="-0.13101142365557361" Y="-0.23437499997456734" />
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Brush.RelativeTransform>
                                </LinearGradientBrush>
                            </Shape.Fill>
                        </Rectangle>-->

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background"  Value="{StaticResource LightBrush}" />-->
                            <Setter Property="BorderBrush" TargetName="MyBorder" Value="{StaticResource LightBorderBrush}" />
                            <!--<Setter TargetName="PathIcon" Property="Fill" Value="Black" />-->
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Grid Background="{StaticResource LightBrush}" Margin="0,0,0,0" Grid.Row="1" HorizontalAlignment="Stretch">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0" >
            <Button Width="100" Margin="20,0,0,0" Height="23" Content="Aceptar" HorizontalAlignment="Left" Style="{StaticResource AcceptStyle}"></Button>
            <Button Width="100" Margin="0,0,0,0" Height="23" Content="Cancelar" HorizontalAlignment="Left" Style="{StaticResource CancelStyle}"></Button>
        </StackPanel>
    </Grid>-->


    <!--LIGHT BUTTON-->
    <ControlTemplate x:Key="lightMyButton" TargetType="Button">
        <Grid x:Name="lightButtonGrid">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Border Name="lightButtonBackground" Grid.RowSpan="2" CornerRadius="12" ></Border>
            <Grid x:Name="lightButtonContent" Grid.RowSpan="2" Margin="1">
                <ContentPresenter Name="content" ContentSource="{TemplateBinding Content}" 
                      VerticalAlignment="Center" HorizontalAlignment="Right">
                </ContentPresenter>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Control.Opacity" Value="0.5"></Setter>
                <Setter TargetName="lightButtonBackground" Property="Background" Value="Red" ></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="content" Property="RenderTransform" >
                    <Setter.Value>
                        <TranslateTransform Y="1" X="0.5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    
</ResourceDictionary>